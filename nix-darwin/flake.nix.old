{
  description = "Kapi nix-darwin system flake";

    inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixpkgs-unstable";
    nix-darwin.url = "github:nix-darwin/nix-darwin/master";
    mac-app-util.url = "github:hraban/mac-app-util";
    nix-darwin.inputs.nixpkgs.follows = "nixpkgs";
    nix-homebrew.url = "github:zhaofengli-wip/nix-homebrew";
  };

  outputs = inputs@{ self, nix-darwin, nixpkgs, nix-homebrew, mac-app-util, ...}:
  let
    configuration = { pkgs, config, ... }: {
      # List packages installed in system profile. To search by name, run:
      # $ nix-env -qaP | grep wget
      environment.systemPackages = with pkgs; [ 
	        neovim
          aria2
		mkalias
          neofetch
          xcodes 
          discord
          git
          obsidian
          warp-terminal
          # blender
	        tmux
	        thunderbird
	        # vscode
	        #pureref
	        rectangle
#	        vlc
        ];
	#List Fonts we want to install
      fonts.packages = [
        pkgs.nerd-fonts.jetbrains-mono
      ]; 

      # Necessary for using flakes on this system.
      nix.settings.experimental-features = "nix-command flakes";

      # Enable alternative shell support in nix-darwin.
      programs.zsh.enable = true; 
      # programs.fish.enable = true;

      # Set Git commit hash for darwin-version.
      system.configurationRevision = self.rev or self.dirtyRev or null;

      # Used for backwards compatibility, please read the changelog before changing.
      # $ darwin-rebuild changelog
      system.stateVersion = 6;

      # The platform the configuration will be used on.
      nixpkgs.hostPlatform = "aarch64-darwin";
    };
  in
  {
    # Build darwin flake using:
    # $ darwin-rebuild build --flake .#Aadityas-MacBook-Pro
    darwinConfigurations."mbp" = nix-darwin.lib.darwinSystem {
      modules = [ configuration 
      {
        nixpkgs.config.allowUnfree = true;
      }
	mac-app-util.darwinModules.default
      nix-homebrew.darwinModules.nix-homebrew
        {
          nix-homebrew = {
            # Install Homebrew under the default prefix
            enable = true;

            # Apple Silicon Only: Also install Homebrew under the default Intel prefix for Rosetta 2
            enableRosetta = true;

            # User owning the Homebrew prefix
            user = "kapi";

            # Automatically migrate existing Homebrew installations
            autoMigrate = true;
          };
        }
      ];
      # darwinPackages = self.darwinConfigurations."mbp".pkgs;
    };
  };
}
